<launch>
    <arg name="gui"        default="true"/>
    <arg name="world_file" default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/>

    <arg name="base"       value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
    <arg name="battery"    value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
    <arg name="stacks"     value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
    <arg name="3d_sensor"  value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="gui" value="$(arg gui)" />
        <arg name="world_name" value="$(arg world_file)"/>
    </include>

    <!--tb2-->
    <group ns="tb2">
        <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
            <arg name="base" value="$(arg base)"/>
            <arg name="stacks" value="$(arg stacks)"/>
            <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
        </include>

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" type="double" value="30.0" />
            <param name="tf_prefix" value="tb2" />
        </node>

        <!-- Fake laser -->
        <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
        <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
                args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
            <param name="scan_height" value="10"/>
            <param name="output_frame_id" value="camera_depth_frame"/>
            <param name="range_min" value="0.45"/>
            <remap from="image" to="/camera/depth/image_raw"/>
            <remap from="scan" to="/scan"/>
        </node>

        <!--controller-->
        <node pkg="sin_runner_tb2" type="tb2_controller_node" name="controller" args="manager" launch-prefix="gnome-terminal --tab --">
            <rosparam file="$(find sin_runner_tb2)/config.yaml" />
        </node>
    </group>

    <node pkg="sin_runner_tb2" type="console" name="console" launch-prefix="gnome-terminal --tab --">
        <!--订阅用-->
        <param name="topic_name" value="tb2/odom" />
        <!--打印用-->
        <param name="vehicle_name" value="tb2" />        
    </node>

    <node pkg="sin_runner_tb2" type="station" name="station" launch-prefix="gnome-terminal --tab --" />

</launch>